// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  sops      SOP[]
  sopViews  SOPView[]

  @@map("users")
}

// SOP (Standard Operating Procedure) model
model SOP {
  id          Int      @id @default(autoincrement())
  title       String
  content     String   @db.Text
  version     String   @default("1.0")
  status      SOPStatus @default(DRAFT)
  authorId    Int
  categoryId  Int?
  
  // Relations
  author      User     @relation(fields: [authorId], references: [id])
  category    Category? @relation(fields: [categoryId], references: [id])
  views       SOPView[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("sops")
}

// Category model for organizing SOPs
model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  color       String?  @default("#0070f3")
  
  // Relations
  sops        SOP[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("categories")
}

// Track SOP views for analytics
model SOPView {
  id      Int      @id @default(autoincrement())
  sopId   Int
  userId  Int
  viewedAt DateTime @default(now())
  
  // Relations
  sop     SOP      @relation(fields: [sopId], references: [id])
  user    User     @relation(fields: [userId], references: [id])

  @@map("sop_views")
}

// Enums
enum Role {
  USER
  ADMIN
}

enum SOPStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}